dependencies {
    compileOnly("org.jetbrains:annotations:${jetbrains_annotations_version}")

    api("org.ow2.asm:asm:${asm_version}")
    api("org.ow2.asm:asm-tree:${asm_version}")
    api("org.ow2.asm:asm-commons:${asm_version}")
    api("org.ow2.asm:asm-analysis:${asm_version}")
    api("org.ow2.asm:asm-util:${asm_version}")
    api(project(':spi'))
    api("net.neoforged:mergetool:${mergetool_version}:api")
    api("org.apache.logging.log4j:log4j-api:${log4j_version}")
    api("org.slf4j:slf4j-api:${slf4j_api_version}")
    api("com.google.guava:guava:${guava_version}")
    api("com.google.code.gson:gson:${gson_version}")
    api("org.apache.maven:maven-artifact:${apache_maven_artifact_version}")
    api("org.apache.commons:commons-lang3:${apache_commons_lang3_version}")
    api("com.electronwill.night-config:core:${nightconfig_version}")
    api("com.electronwill.night-config:toml:${nightconfig_version}")
    api("cpw.mods:modlauncher:${modlauncher_version}")
    api("net.neoforged:coremods:${coremods_version}")
    api("com.mojang:logging:${mojang_logging_version}")
    api "net.neoforged:JarJarSelector:${jarjar_version}"
    api "net.neoforged:JarJarMetadata:${jarjar_version}"
    api("cpw.mods:securejarhandler:${securejarhandler_version}")

    implementation("net.sf.jopt-simple:jopt-simple:${jopt_simple_version}")
    implementation("cpw.mods:securejarhandler:${securejarhandler_version}")
    implementation("net.neoforged:accesstransformers:${accesstransformers_version}")
    implementation("net.neoforged.accesstransformers:at-modlauncher:${accesstransformers_version}") {
        exclude module: 'modlauncher'
    }
    implementation("org.spongepowered:mixin:${mixin_version}")
    implementation("net.minecrell:terminalconsoleappender:${terminalconsoleappender_version}")

    implementation("org.apache.logging.log4j:log4j-core:${log4j_version}")
    annotationProcessor("org.apache.logging.log4j:log4j-core:${log4j_version}")

    testCompileOnly("org.jetbrains:annotations:${jetbrains_annotations_version}")
    testRuntimeOnly("cpw.mods:bootstraplauncher:${bootstraplauncher_version}")
}


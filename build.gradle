plugins {
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'org.javamodularity.moduleplugin' version '1.8.7'
    id 'net.neoforged.licenser' version '0.7.2' apply false
    id 'com.diffplug.spotless' version '6.25.0' apply false
    id 'net.neoforged.gradleutils' version "${gradleutils_version}"
    id 'net.neoforged.gradleutils.spotless' version "${gradleutils_version}" apply false
}

changelog {
    disableAutomaticPublicationRegistration()
}

gradleutils.version {
    branches {
        suffixBranch()
    }
}

println "Version: ${project.version = gradleutils.version}"

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'org.javamodularity.moduleplugin'
    apply plugin: 'net.neoforged.licenser'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'net.neoforged.gradleutils'
    apply plugin: 'net.neoforged.gradleutils.spotless'

    gradleutils {
        setupSigning(signAllPublications: true)
    }

    group = 'net.neoforged.fancymodloader'
    version = rootProject.version

    spotlessUtils.configure(spotless)

    repositories {
        mavenCentral()

        maven {
            name = 'NeoForged'
            url = 'https://maven.neoforged.net/releases'
        }

        maven {
            name = 'Minecraft'
            url = 'https://libraries.minecraft.net'
        }

        // TODO remove
        mavenLocal()
    }

    dependencyUpdates.rejectVersionIf { isNonStable(it.candidate.version) }

    java {
        withSourcesJar()
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    test {
        useJUnitPlatform()
    }
}

subprojects { subProject ->
    subProject.version = rootProject.version

    jar.doFirst {
        var subName = subProject.name
        var subVersion = subProject.version.toString()
        var subVersionData = subVersion.split("\\.")
        var subVersionMajor = subVersionData[0]
        var subVersionMinor = subVersionData[1]
        manifest.attributes(
                'Git-Commit'            : gradleutils.gitInfo.abbreviatedId,
                'Build-Number'          : subVersion,
                'Automatic-Module-Name' : "fml_${subProject.name.replace("-", "_")}",
                'FMLModType'            : 'LIBRARY',
                'Specification-Title'   : "FML${subName}",
                'Specification-Vendor'  : 'NeoForged',
                'Specification-Version' : subVersionMajor,
                'Implementation-Title'  : "FML ${subName}",
                'Implementation-Version': "${subVersionMajor}.${subVersionMinor}",
                'Implementation-Vendor' : 'NeoForged'
        )
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs << '-Xlint:unchecked'
    }

    license {
        header = rootProject.file('LICENSE-header.txt')
        skipExistingHeaders true

        include 'net/neoforged/'
    }

    artifacts {
        archives jar
        archives sourcesJar
    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven gradleutils.publishingMaven
        }
    }

    changelog {
        from "1.0"
    }
}

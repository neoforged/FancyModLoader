plugins {
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'net.neoforged.licenser' version '0.7.5' apply false
    id 'dev.lukebemish.immaculate' version '0.1.11' apply false
    id 'net.neoforged.gradleutils' version "${gradleutils_version}"
    id 'net.neoforged.gradleutils.immaculate' version "${gradleutils_version}" apply false
    id 'org.gradlex.extra-java-module-info' version '1.12' apply false
}

changelog {
    disableAutomaticPublicationRegistration()
}

gradleutils.version {
    branches {
        suffixBranch()
        suffixExemptedBranchPatterns = [/1\.\d+\.\d+/]
    }
}

println "Version: ${project.version = gradleutils.version}"

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'
    apply plugin: 'maven-publish'
    apply plugin: 'signing'

    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'net.neoforged.licenser'
    apply plugin: 'dev.lukebemish.immaculate'
    apply plugin: 'net.neoforged.gradleutils'
    apply plugin: 'net.neoforged.gradleutils.immaculate'

    gradleutils {
        setupSigning(signAllPublications: true)
    }

    group = 'net.neoforged.fancymodloader'
    version = rootProject.version

    dependencyUpdates.rejectVersionIf { isNonStable(it.candidate.version) }

    java {
        withSourcesJar()
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    test {
        useJUnitPlatform()
    }
}

subprojects { subProject ->
    subProject.version = rootProject.version

    jar {
        manifest.attributes(
                'Git-Commit'  : gradleutils.gitInfo.abbreviatedId,
                'Build-Number': subProject.version.toString(),
                'Automatic-Module-Name' : "fml_${subProject.name.replace("-", "_")}",
                'Specification-Title'   : "FML${subProject.name}",
                'Specification-Vendor'  : 'NeoForged',
                'Specification-Version' : subProject.version.toString().split('\\.')[0],
                'Implementation-Title'  : "FML $subProject.name",
                'Implementation-Version': subProject.version.toString().split('\\.')[0] + '.' + subProject.version.toString().split('\\.')[1],
                'Implementation-Vendor' : 'NeoForged'
        )
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs << '-Xlint:unchecked'
    }

    license {
        header = rootProject.file('LICENSE-header.txt')
        skipExistingHeaders true

        include 'net/neoforged/'
        exclude 'net/neoforged/fml/FMLVersionProperties.java'
    }

    artifacts {
        archives jar
        archives sourcesJar
    }

    if (project.name != 'tests' && project.name != 'testlib') {
        publishing {
            publications {
                maven(MavenPublication) {
                    from components.java
                }
            }

            repositories {
                maven gradleutils.publishingMaven
            }
        }
    }

    changelog {
        from "9.0"
    }
}
